#print('hello world')

# ТИПЫ ДАННЫХ И ПЕРЕМЕННАЯ
# int, float, boolean, str, list, None

value = None
a = 123
b = 1.23

print(a)
print(b)
value = 12345
print(value)

# print(type(a)) #вывод типа переменной
# print(type(b))
# print(type(value))

# s = 'qwerty' #объявление строки
s = "hello 'world'" #двойные кавычки позволяют 
# юзнуть одинарные (и наоборот) внутри строки 
print(s)

# \'  печать одинокого апострофа
# \n  переход на новую строку

# СПОСОБЫ ВЫВОДА
print(a, b, s)
print(a, '-', b, '-', s)
print('{} - {} - {}'.format(a, b, s)) #форматированный вывод
print('{1} - {2} - {0}'.format(a, b, s)) # то же, но в скобках индексы переменных
# первой напечатается b, потом s, потом a
print(f'{a} - {b} - {s}')  #интерполяция

f = True # логическая переменная
print(f)

#СПИСКИ (массивов как таковых нет)
list = [1, 2, 3, '1', 'hello', True] # разные типы данных в списке, но вообще
# лучше не миксовать так
print(list)

# ВВОД И ВЫВОД ДАННЫХ, ПРЕОБРАЗОВАНИЕ ТИПОВ
# print() отвечает за вывод данных
# input() отвечает за ввод данных
print('введите a');
a = int(input()) # по умолчанию работаем со строками, поэтому нужно указать тип
print('введите b'); 
b = int(input())
print(a, b) # варианты вывода
print('{} {}'.format(a, b)) 
print(f'{a} {b}') 
print(a, ' + ', b, ' = ', a+b) 

# АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ
# + - * / % // **
a = 1.31231223 
b = 3
c = a * b
print(c)
c = round(a * b, 5) # 5 - это кол-во знаков после запятой
print(c)

# по умолчанию деление работает как для веществ чисел
# // деление в целых числах
# ** возведение в степень

a = 3
a = a + 5 # a += 5  
print(a)

# ЛОГИЧЕСКИЕ ОПЕРАЦИИ
# > >= < <+ == !=
# not, and, or - не путать с &, |, ^
# ещё: is, is not, in, not in
# gen

a = 1 > 4
print(a) # False потому шо неправда

a = 1 < 4 and 5 > 2
print(a)

a = 1 == 2
print(a)

a = 'qwe'
b = 'qwe'
print(a == b) # сравнение True

a = [1, 2]
b = [1, 2]
print(a == b) # сравнение делается поэлементно True

a = 1 < 3 < 5 # в пайтоне возможны тройные и четверные неравенства True
print(a)

f = 1 > 2 or 4 < 6 # True дизъюнкция - истинно тогда, 
# когда хотя бы одно из высказываний истинно

f = [1, 2, 3, 4]
print(f)
print(2 in f) #True потому шо 2 в списке содержится
print(not 2 in f) # отрицание, подробности неизвестны

is_odd = f[0] % 2 == 0 # проверка на чётность к-л (зд.с индексом 0) элемента списка
print(is_odd) # False (1 нечётное число)

is_odd = not f[0] % 2 # по умолч в пайтоне 0 это ложь, а 1 - истина
print(is_odd) # False о_О странновывернутое
